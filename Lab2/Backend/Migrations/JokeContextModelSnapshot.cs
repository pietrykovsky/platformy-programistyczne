// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(JokeContext))]
    partial class JokeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Backend.Data.Models.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FavouritedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("JokeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JokeId")
                        .IsUnique();

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("Backend.Data.Models.Joke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jokes");
                });

            modelBuilder.Entity("Backend.Data.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JokeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JokeId")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Backend.Data.Models.Favourite", b =>
                {
                    b.HasOne("Backend.Data.Models.Joke", "Joke")
                        .WithOne("Favourite")
                        .HasForeignKey("Backend.Data.Models.Favourite", "JokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joke");
                });

            modelBuilder.Entity("Backend.Data.Models.Rating", b =>
                {
                    b.HasOne("Backend.Data.Models.Joke", "Joke")
                        .WithOne("Rating")
                        .HasForeignKey("Backend.Data.Models.Rating", "JokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joke");
                });

            modelBuilder.Entity("Backend.Data.Models.Joke", b =>
                {
                    b.Navigation("Favourite")
                        .IsRequired();

                    b.Navigation("Rating")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
